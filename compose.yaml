volumes:
  db_storage:
  n8n_storage:
  redis_storage:

networks:
  n8n-net:
    driver: bridge

x-shared: &shared
  restart: always
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    - N8N_BASIC_AUTH_ACTIVE=true
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_HOST=${N8N_HOST}
    - N8N_PROTOCOL=${N8N_PROTOCOL}
    - N8N_RUNNERS_ENABLED=${N8N_RUNNERS_ENABLED}
    - NODE_ENV=${NODE_ENV}
    - WEBHOOK_URL=${N8N_PROTOCOL}://${N8N_HOST}/
    - WEBHOOK_TUNNEL_URL=${N8N_PROTOCOL}://${N8N_HOST}/
    - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
  networks:
    - n8n-net
  volumes:
      - n8n_storage:/home/node/.n8n
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:17
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    ports:
      - "54322:5432"
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "sh -c \"pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}\""]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - n8n-net
    hostname: postgres

  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_storage:/data
    networks:
      - n8n-net
    hostname: redis
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    <<: *shared
    image: n8nio/n8n:latest
    command: start
    ports:
      - 5678:5678
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  n8n-worker-1:
    <<: *shared
    image: n8nio/n8n
    command: worker
    depends_on:
      - n8n

  n8n-worker-2:
    <<: *shared
    image: n8nio/n8n
    command: worker
    depends_on:
      - n8n
